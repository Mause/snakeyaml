= JvYAML - A pure Java YAML 1.1 loader and dumper

Project Contact: Ola Bini <ola@ologix.com>

For a long time Java have lacked a good YAML loader and dumper with all the features that
the SYCK using scripting communities have gotten used to. JvYAML aims to rectify this.
It's a port from RbYAML by Ola Bini, which was a port of PyYAML3000, 
written by Kirill Simonov <xi@resolvent.net>.

JvYAML is aimed at improving YAML performance in the JRuby project (http://jruby.sourceforge.net),
but is also suitable for configuration and data storage in regular Java applications.

Right now JvYAML only suppports loading, but this is mostly 1.1-compliant. Almost all required 
types are there and functional. Dumping support is expected to arrive shortly.


== Usage

To load a YAML document without any special customization, you can simply import
org.jvyaml.YAML and do something like this:

Map configuration = (Map)YAML.load(new FileReader("c:/projects/ourSpecificConfig.yml"));

or this:

List values = (List)YAML.load("--- \n- A\n- b\n- c\n");

Or if you have a YAML document that looks like this:
--- !java/object:org.jruby.UserConfig
userdir: d:/config/jruby
prefs:
  - pref1.properties
  - values.properties
  - foo.xml

Load it like this:

org.jruby.UserConfig conf = (org.jruby.UserConfig)YAML.load(new FileReader("path.to.the.yaml.file"));
conf.getUserdir();                      ==> "d:/config/jruby"
conf.getPrefs().iterator().next();      ==> "pref1.properties"

(Note: this feature will be implemented at the same time as Dumping, sometime befure july)

JvYAML is also customizable. If you want to use a different Resolver or Constructor for your YAML document, it's very easy
to change the behaviour by implementing the YAMLFactory interface. This is in fact the way JRuby returns 
RubyObjects instead of regular Java objects. A specialized JRubyConstructor is created, and when loading
a JRubyYAMLFactory is created that uses this Constructor instead.


== More information

Visit http://jvyaml.dev.java.net for more information and updated versions


== License

JvYAML is distributed with a MIT license, which can be found in the file LICENSE.
